#!/usr/bin/perl
# !/usr/bin/perl -w
use strict;
use warnings;

open PID, '>', '.@pid' or warn $!;
print PID $$, "\n";
close PID or warn $!;

$| = 1;

use constant PROMPT => 'query: ';
print PROMPT;

while ( <> ) { # read input from the client
    chomp;
    s/\r//;

    if ( m/^\s*$/ ) { } # skip blank lines 

    elsif ( m/^\s*#/ ) { } # skip comment lines

    elsif ( m/^h(elp)?$/i ) { # action command
        help_screen();
        }

    elsif ( m/^q(uit)?$/i ) { # action command
        print "goodbye!\n";
        exit 0;
        }

    elsif ( m/^list\s*(.*)?$/i ) { # list sites command
        system "ls $1";
        }

    elsif ( m/^call\s+(.+)$/ ) { # load and call with query parameters
        my $site = $1;
        $site =~ s/\r//;

        unless ( -e $site ) { # try alternate ways to resolve site
            if ( -e "_/$site" ) {
                $site = '_/' . $site;
                }
            elsif ( $site = resolve_site($site) ) {
                open TRANSITIONS, '>>', '@transitions' or warn $!;
                print TRANSITIONS $site, "\n";
                close TRANSITIONS or warn $!;
                }
            else {
                open FAILED, '>>', '@failed' or warn $!;
                print FAILED $site, "\n";
                close FAILED or warn $!;
                die "unable to resolve $site\n";
                }
            }

        exec "/usr/local/bin/tob $site.call"
            if -d $site;
        die "site not found: $site\n";
        }

    else {
        print "unknown query: $_\n";
        }
    print PROMPT;
    }

exit 0;

sub help_screen {
    print << "    END_HELP";
    list -- list all sites
    help -- display this message
    quit -- close down session
    call -- call specified site
    END_HELP
    
    }

sub resolve_site {
    my $site = shift;
    return "_/transition/$site" if -e "_/transition/$site";
    opendir TRANS, '_/transition/' or die $!;
    foreach my $dir ( readdir TRANS ) {
        next if $dir =~ m/^\./;
        $dir = "_/transition/$dir";
        next unless -d $dir && ! -l $dir;
        return "$dir/$site" if -e "$dir/$site";
        }
    closedir TRANS or die $!;
    return 0;
    }
