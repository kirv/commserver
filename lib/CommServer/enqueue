#!/bin/bash

error() { echo "$@" >&2 && exit 1; }

spool=.q-spool
test -d $spool || error CommSite object not initialized

# default values for options:
timeout=60
delay=0

while read -a query -p 'query: '; do
    cmd=$query
    unset query[0]
    case $cmd in

        call)   site=${query[1]}
                unset query[1]
                break
                ;;

        ls)     ls "${query[@]}"
                ;;

        q|quit) echo goodbye!
                exit 0
                ;;

        h)      printf "    %s\n" \
                    'call SITE [OPTIONS] -- check, then queue site to call' \
                    'ls                 -- list commserver object contents' \
                    'q|quit             -- exit' \
                    'h                  -- show short help' \
                    'help               -- show man page'
                ;;

        help)   awk '/^NAME$/{ok=1}ok{print}' $0
                ;;

        *)      printf "\a?\n"
                ;;

    esac
done

# echo call $site with args: "${query[@]}" 
test -d $site || error no site: $site

i=2 # skip entries 0 ('call' command) and 1 (the site)
while test -n "${query[$i]}"; do
    case ${query[$i]} in
        --notify)
            notify=1
            ;;

        --priority)
            i=$(($i+1))
            priority=${query[$i]}
            ;;

        --timeout)
            i=$(($i+1))
            timeout=${query[$i]}
            ;;

        --delay)
            i=$(($i+1))
            delay=${query[$i]}
            ;;

        *)  error unknown option: ${query[$i]}
            ;;
    esac
    i=$(($i+1))
done

# create tag as short form of site name, in case it spans directories:
tag=${site##*/}

test -d $spool/$tag && error site $site is already queued

# set link to site object in spool:

ln -s ../$site $spool/$tag

# delete all queue attributes, with prefix 'q-':
rm $spool/$tag/q-*

test -n "$notify" && touch $spool/$tag/q-NOTIFY

test -n "$priority" && touch $spool/$tag/q-PRIORITY=$priority

now=$(date +%s)
test -n "$delay" && test $delay -gt 0 && {
    future=$(($now+$delay))
    touch -d @$future $spool/$tag/q-DELAY
    }

test -n "$timeout" || error missing required timeout value
# TODO: check that $timeout and $delay are integer values!!
future=$(($now+$delay+$timeout))
touch -d @$future $spool/$tag/q-TIMEOUT

exit 0

NAME
    CommServer.enqueue -- dialog to queue a site to call

DESCRIPTION
    Adds the specified site to the queue spool, then runs the
    pick-site-to-call method which moves the site from the spool into
    the queue.

COMMANDS
    Enter one of the following at the 'query:' prompt:

    call SITE [--notify] [--priority NUMBER] [--timeout SECONDS] [--delay SECONDS]
        check that site exists, create queue object in spool
        see SITE OPTIONS below

    ls [...]
        list contents of commserver object

    q
    quit
        exit with status 0

    h
        show brief synopsis

    help
        show manpage

SITE OPTIONS
    --notify
        after site is chosen and a route locked, don't initiate connection
        but notify client that a connection can be made
    
    --priority NUMBER
        optional priority number to favor one site over another; no default
    
    --timeout SECONDS
        specify how long attempt to call should persist in queue
        default is 60 seconds
    
    --delay SECONDS
        specify how long to leave site in the queue spool; no default
    
AUTHOR
    Ken.Irving@alaska.edu 2010

