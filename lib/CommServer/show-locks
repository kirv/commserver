#!/bin/bash

synopsis="server.show-locks [--help]"

error() { printf "%s\n" "$*" &>2; exit 1; }

while test -n "$1"; do 
    arg=$1 && shift
    case $arg in
        --age)  show_age=1 ;;
        --help) exec awk '/^NAME/,0{print}' $0 ;;
        *)      error "unknown argument: $arg; syopsis: $synopsis" ;;
    esac
done

now=$(date +%s)

count=0
for lock in */@LOCK; do
    test "${lock:0:1}" == \* && continue
    test -e $lock || continue # lock may have been released...

    count=$(($count+1))

    # read contents of lock file into array var contents
    contents=( $(<$lock) ) 2>/dev/null || continue 

    # skip lock file unless first entry is an absolute path to a node:
    test ${contents:0:1} == "/" -a -d "$contents" || continue

    nodelist=()
    for node in "${contents[@]}"; do
        tag=${node##*/}
        test -e $node/@id && tag=$(<$node/@id)
        nodelist=(${nodelist[@]} $tag)
    done

    locktime=$(stat -c %y $lock)
    locktime=${locktime%.0*}
    locktime=${locktime#*-}

    age=$((now-$(stat -c %Y $lock)))
    callpid=$(<${lock%@LOCK}/@call-pid)
    pidstatus=stale
    test -e /proc/$callpid && pidstatus=active

    if test -n "$show_age"; then
        printf "%s " "$age"
    else
        printf "%s " "$locktime"
    fi

  # printf "%d " $((${#nodelist[@]}+1))

    printf "%s --> " ${nodelist[@]}
    printf "%s -- %s\n" $(<${lock%/*}/@id) $callpid

  # printf "%s -- %s %s\n" $(<${lock%/*}/@id) $callpid $pidstatus

done

printf "%d locks\n" $count

exit

NAME
    CommServer.show-locks

SYNOPSIS
    server.show-locks [--help]

DESCRIPTION
    Server management utility to show active locks, listing them from base to
    target, and showing a total count of locks at the end.

OPTIONS
    --help
        show this page

BUGS
    Target nodes with symlinks/aliases are not identified, so those locks are
    shown and counted more than once.

AUTHOR
    ken.irving@alaska.edu 2010
