#!/bin/bash

usage="unlock-route [-h] [--help] [TAG]"

unlock-route () {
    for node in $(cat @LOCK); do
        test -n "$tag" && {
            test "$(<$node/@LOCK)" == $tag ||
                return 1
            }
        rm $node/@LOCK || {
            nolock="$nolock ${node##*/}"
            m=$(($m + 1))
            continue
            }
        n=$(($n + 1))
        nodes="$nodes ${node##*/}"
        test -n "$VERBOSE" && printf " ${node##*/}"
    done
    return 0
    }

main () {
    test -e @LOCK || exit 3
    test -s @LOCK || exit 2
    nodes=""
    nolock=""
    n=0
    m=0
    unset nplural
    unset mplural
    unlock-route && rm @LOCK && n=$(($n + 1)) || {
        test $n -gt 1 && nplural=s
        echo failed to remove lock$nplural in $node$nplural | tob log.store
        return 1
        }
    test $n -gt 1 && nplural=s
    msg="removed $n lock$nplural: $nodes ${TOB_object##*[./]}"
    test -n "$nolock" && {
        test $m -gt 1 && mplural=s
        msg="$msg, missing $m lock$mplural:$nolock"
        }
    echo $msg | tob log.store
    }

test -n "$1" && {
    tag=$1
    if test $tag == --no-log; then
        NOLOG=1
        shift
        tag=$1
    elif test $tag == -h; then
        echo "$usage"
        exit 0
    elif test $tag == --help; then
        exec awk '/^NAME/{ok=1}ok{print}' $0  
    fi

    }

main

exit

NAME
    unlock-route

EXIT VALUES
    0 -- success, locks were removed
    1 -- failed to remove one or more locks
    2 -- lock is owned by another node, no change
    3 -- object was not locked

DESCRIPTION
    The file @LOCK contains the route to reach the object node,
    while the @LOCK files in the route nodes are empty.
