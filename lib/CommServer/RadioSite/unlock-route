#!/bin/bash

usage="unlock-route [-h] [--help] [TAG]"

tob=/usr/local/bin/tob
errlog=/tmp/unlock-route-errors
test -e $errlog || echo initialize $errlog >> $errlog

while test -n "$1" -a "${1:0:1}" == '-'; do
    opt=$1 && shift
    case $opt in
        --help)
            exec awk '/^NAME/,0' $0
            ;;
        -h) printf "usage: %s\n" "$usage"
            exit 0
            ;;
        *)  printf "unknown option: %s\n" "$opt $@"
            printf "usage: %s\n" "$usage" >&2
            exit 1
            ;;
    esac
done

unset tag
test -n "$1" && {
    tag=$1
    test $tag == $(<@id) ||
        printf "tag '%s' does not match node id '%s'\n" $tag "$(<@id)" >> $errlog
    }

test -e @LOCK || exit 3  # lock file does not exist
test -s @LOCK || exit 2  # lock file is empty
nodes=($(<@LOCK) .)
locks=(${nodes[@]/%/\/@LOCK})

## remove all locks in one run of 'rm(1)', loop on STDERR output, e.g.:
##      rm: cannot remove `foo': No such file or directory
##      rm: cannot remove `bar': Is a directory
status=0
now=$(date +%d-%H:%M)
while read rm_error; do
    case "${rm_error##*: }" in

        'No such file or directory')
            printf "%s %s (no file): {%s}\n" $now "$(<@id)" "$rm_error"
            printf "%s %s: {%s}\n" $now "$(<@id)" "$rm_error" >> $errlog
            # leave status at 0 for this
            ;;

        'Is a directory')
            printf "%s %s (directory): {%s}\n" $now "$(<@id)" "$rm_error"
            printf "%s %s: {%s}\n" $now "$(<@id)" "$rm_error" >> $errlog
            status=1
            ;;

        '') # don't know why we sometimes get empty strings, but ignore this
            status=0
            ;;

        *) status=1
            printf "%s %s (other): {%s}\n" $now "$(<@id)" "$rm_error"
            printf "%s %s: {%s}\n" $now "$(<@id)" "$rm_error" >> $errlog
            status=1
            ;;
    esac
done <<<"$(rm ${locks[@]} 2>&1)"

exit $status

NAME
    radiosite.unlock-route

DESCRIPTION
    The file @LOCK contains the route to reach the object node, while
    the @LOCK files in the route nodes are empty or contain an identifier
    for the target site.

    All locks are removed in one operation using rm(1), and any output
    is inspected, including STDERR.

SYNOPSIS
    unlock-route [-h] [--help] [TAG]

EXIT VALUES
    0 -- success, locks were removed
    1 -- failed to remove one or more locks
    2 -- lock is owned by another node, no change
    3 -- object was not locked

AUTHOR
    ken.irving@alaska.edu 2010

