#!/bin/bash

synopsis="link-add site [init_options] [site2 [options]]..."

test -n "$1" || {
    echo "synopsis: $synopsis" >&2
    exit 1
    }
    
linkname=$1 && shift
link=$linkname

test -e $link/ || {
    # link not found
    test -e $TOB_caller_path/$link/ && 
        link=$TOB_caller_path/$link/
    test -e $link/ || {
        echo "link-add target $link ($linkname) not found"
        exit 3
        }
    }

link=$(readlink -f $link) || {
    echo "link-add target $link ($linkname) did not resolve to object"
    exit 4
    }

for node in linkto/*; do
    test -L $node/! || continue
    existing=$(readlink -f $node/!)
    test $link == $existing && {
        echo link to $linkname already exists as $node >&2
        exit 2
        }
done

# extract options to pass along to RadioLink.init
# this depends on each taking a value, or we could parse them here if necessary
declare -a opts
while test "${1:0:1}" == '-'; do
    opts=( "${opts[@]}" "$1" ) && shift
    opts=( "${opts[@]}" "$1" ) && shift
done

tob-new --hide-attr linkto/$linkname CommServer/RadioLink "${opts[@]}" &&
    ln -s $link linkto/$linkname/!

# argument is assumed to be another site to link to:
test -n "$1" && {
    $0 "$@" ||
        exit
    }

exit 0

NAME
    link-add -- add a radio link object to a radio site

SYNOPSIS
    link-add PATH_TO_SITE [INIT ARGS]

DESCRIPTION
    Create a new CommServer/RadioLink object in the object.  The init method is
    called after the link object is created, and can take two optional arguments:
    
        --distance DISTANCE
        --visibility NUMBER

    where DISTANCE is in kilometers, and NUMBER is any number from 0 to 1.

EXIT STATUS
    1 -- exit status from link-add method
    2 -- link already exists
    3 -- link not found
    4 -- link did not resolve using readlink -f

