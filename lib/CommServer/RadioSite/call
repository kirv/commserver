#!/bin/bash

self=.

get-attr () {
    attr=$1
    unset value
    for path in ${TOB_attribute_search_paths//:/ }; do
        test -e $path/$attr && {
            value=$(<$path/$attr)
            return 0
            }
    done
    }

main () {
    tag=${TOB_object##*[./]}
    tob $self.lock-route $tag || exit
    trap "tob $self.unlock-route" EXIT TERM
    route=$(<@LOCK)
    base=${route%% *}
    repeaters=${route#* }
    echo $base > @base
    echo $repeaters > @route
    test "$repeaters" == $base &&{
        unset repeaters
        >@route
        }
    radio=$(<@radio)
    options=( --tag "$tag" )
    get-attr \@prompt && options=( "${options[@]}" --prompt $value )
    get-attr \@retries && options=( "${options[@]}" --retries $value )
    t0=$(date +%s)
    echo tob $base.call "${options[@]}" $radio $repeaters
    tob $base.call "${options[@]}" $radio $repeaters
    elapsed=$(( $(date +%s) - $t0 ))
    test -s $base/\@session &&
        tee < $base/\@session \@session | tob sessions.store
    tob $self.unlock-route --no-log $tag &&
        trap - EXIT TERM
    printf "%ds to call %s via %s and path <%s>\n" $elapsed $tag $base "$repeaters" |
        tob log.store
    }

main

exit

NAME
    call -- initiate a connection to this radio site

EXIT VALUES
    0 -- success
    1 -- some failure occurred
    2 -- failed, no route to site
    3 -- site radio is not powered

DESCRIPTION
    Invoke lock-route to secure a route, then invoke the call method on the
    selected base radio.


