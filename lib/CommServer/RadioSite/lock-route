#!/bin/bash

set -o noclobber

lock_route () {
    for node in $*; do
        >$node/@LOCK || {
            test -n "$locks" && rm $locks
            unset locks
            return 1
            }
        test -n "$tag" &&
             echo $tag >| $node/@LOCK
        locks="$locks $node/@LOCK"
    done
    return 0
    }

log-route () {
    printf "locked route $n:"
    for node in $route; do
        printf " ${node##*/}"
    done
    if test -n "$tag"; then
        printf " $tag\n"
    else
        printf " ${TOB_object##*[./]}"
    fi
    }

main () {
    if test -n "$tag"; then
        printf $tag >\@LOCK || exit 1
    else
        >\@LOCK || exit 1
    fi
    unset locks
    n=1
    while read route; do
        lock_route $route && break
        n=$(($n + 1))
    done < @routes
    
    test -n "$locks" || {
        # no routes were found
        rm @LOCK
        exit 2
        }
    echo $route >| @LOCK
    log-route | tob log.store
    }

test -n "$1" &&
    tag=$1

main 2>/dev/null

exit

NAME
    lock-route

SYNOPSIS
    radiosite.lock-route [tag]

EXIT VALUES
    0 -- success
    1 -- target object already locked
    2 -- no route found

DESCRIPTION
    Assumes @routes list exists and is ordered. Finds a route from
    the object to a base station, setting file @LOCK in each node.
    Write the found route into files '@base' and '@route' in the object.

    Lock files are named '@LOCK' and can be empty or contain a tag string
    provided as an argument.

