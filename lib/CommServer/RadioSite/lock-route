#!/bin/bash

usage="lock-route [--max-hops NUMBER] [-h|--help] [TAG]"

set -o noclobber

lock_route () {
    for node in "$@"; do
        test -e "$node/radio-power=ON" && >$node/@LOCK && {
            test -n "$tag" &&
                 echo $tag >| $node/@LOCK
            locks="$locks $node/@LOCK"
            continue
            }
        # a test failed, so remove locks and bail:
        test -n "$locks" && rm $locks
        unset locks
        return 1
    done
    return 0
    }

log-route () {
    printf "locked route $n:"
    for node in $route; do
        printf " ${node##*/}"
    done
    if test -n "$tag"; then
        printf " $tag\n"
    else
        printf " ${TOB_object##*[./]}"
    fi
    }

main () {
    test -e 'radio-power=ON' || exit 3
    if test -n "$tag"; then
        printf "$tag" >\@LOCK || exit 1
    else
        >\@LOCK || exit 1
    fi
    unset locks
    n=1
    while read route; do
        route=($route)
        ${#route[@]} -gt $max_hops && continue
        lock_route ${route[@]} && break
        n=$(($n + 1))
    done < @routes
    test -n "$locks" || {
        # no routes were found
        rm @LOCK
        exit 2
        }
    test -n "$release" && {
        for node in "${route[@]}"; do
            echo $node
            rm $node/@LOCK
        done
        rm @LOCK
        exit 0
        }
    echo "${route[@]}" >| @LOCK
    log-route | tob log.store
    }

while test -n "$1"; do
    tag=$1 && shift
    if test $tag == --max-hops; then
        max_hops=$1 && shift
    elif test $tag == -h; then
        echo "$usage"
        exit 0
    elif test $tag == --help; then
        exec awk '/^NAME/{ok=1}ok{print}' $0  
    elif test $tag == --release; then
        release=1
    fi
done

test -n "$max_hops" || {
    TOB_get_attr '@max-hops' && max_hops=$attr
    test -n "$max_hops" ||
        max_hops=5
    }

main 2>/dev/null

exit

NAME
    lock-route

SYNOPSIS
    radiosite.lock-route [--max-hops] [--release] [-h|--help] [tag]

EXIT VALUES
    0 -- success
    1 -- target object already locked
    2 -- no route found
    3 -- site radio is not powered

DESCRIPTION
    Assumes @routes list exists and is ordered. Finds a route from
    the object to a base station, setting file @LOCK in each node.
    Write the found route into files '@base' and '@route' in the object.

    Lock files are named '@LOCK' and can be empty or contain a tag string
    provided as an argument.

ATTRIBUTES
    @max-hops -- maximum number of radio hops from base to site

OPTIONS
    --max-hops NUMBER

    --release
        print the route to stdout, then unlock all nodes
        
AUTHOR
    ken.irving@alaska.edu 2010

